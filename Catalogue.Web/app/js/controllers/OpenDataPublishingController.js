// Generated by IcedCoffeeScript 108.0.11
(function() {
  angular.module('app.controllers').controller('OpenDataPublishingController', function($scope, $http, $location, $timeout, signOffGroup) {
    var loadList, loadSummary, loadTab1Data, loadTab2Data, loadTab3Data, loadTab4Data, loadTab5Data, m;
    m = {
      tab: 5,
      openData: {
        summary: {},
        list: []
      },
      signOffStatus: {},
      signOffTimeoutMap: {}
    };
    $scope.m = m;
    loadSummary = function() {
      return $http.get('../api/publishing/opendata/summary').success(function(result) {
        return m.openData.summary = result;
      });
    };
    loadTab1Data = function() {
      return $http.get('../api/publishing/opendata/publishedsincelastupdated').success(function(result) {
        return m.openData.list = result;
      });
    };
    loadTab2Data = function() {
      return $http.get('../api/publishing/opendata/notpublishedsincelastupdated').success(function(result) {
        return m.openData.list = result;
      });
    };
    loadTab3Data = function() {
      return $http.get('../api/publishing/opendata/publicationneverattempted').success(function(result) {
        return m.openData.list = result;
      });
    };
    loadTab4Data = function() {
      return $http.get('../api/publishing/opendata/lastpublicationattemptwasunsuccessful').success(function(result) {
        return m.openData.list = result;
      });
    };
    loadTab5Data = function() {
      return $http.get('../api/publishing/opendata/pendingsignoff').success(function(result) {
        var r, _i, _len, _results;
        m.openData.list = result;
        _results = [];
        for (_i = 0, _len = result.length; _i < _len; _i++) {
          r = result[_i];
          _results.push(m.signOffStatus[r.id] = "Sign Off");
        }
        return _results;
      });
    };
    loadList = function() {
      switch (m.tab) {
        case 1:
          return loadTab1Data();
        case 2:
          return loadTab2Data();
        case 3:
          return loadTab3Data();
        case 4:
          return loadTab4Data();
        case 5:
          return loadTab5Data();
      }
    };
    $scope.$watch('m.tab', loadList);
    loadSummary();
    loadTab5Data();
    $scope.submitSignOff = function(recordId) {
      $scope.signOffRequest = {
        id: recordId,
        comment: ""
      };
      return $http.put('../api/publishing/opendata/signoff', $scope.signOffRequest).success(function(result) {
        m.signOffStatus[recordId] = "Signed Off";
        loadSummary();
        $scope.loadRecordsPendingSignOff();
        return $scope.notifications.add("Successfully signed off");
      })["catch"](function(error) {
        if (error.status === 401) {
          $scope.notifications.add("Unauthorised - not in valid sign off group");
        } else {
          $scope.notifications.add(error.data.exceptionMessage);
        }
        m.signOffStatus[recordId] = "Retry?";
        return delete m.signOffTimeoutMap[recordId];
      });
    };
    $scope.allowGraceTime = function(recordId) {
      if (m.signOffTimeoutMap[recordId] > 0) {
        m.signOffStatus[recordId] = "Cancel " + ("0" + m.signOffTimeoutMap[recordId]--).slice(-2);
        return $timeout($scope.allowGraceTime.bind(null, recordId), 1000);
      } else if (recordId in m.signOffTimeoutMap) {
        return $scope.submitSignOff(recordId);
      }
    };
    $scope.cancelSignOff = function(recordId) {
      delete m.signOffTimeoutMap[recordId];
      return m.signOffStatus[recordId] = "Sign Off";
    };
    return $scope.signOffButtonClick = function(recordId) {
      if (!(recordId in m.signOffTimeoutMap)) {
        m.signOffTimeoutMap[recordId] = 10;
        return $scope.allowGraceTime(recordId);
      } else {
        return $scope.cancelSignOff(recordId);
      }
    };
  });

}).call(this);

//# sourceMappingURL=OpenDataPublishingController.js.map
